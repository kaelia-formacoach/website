---
import Layout from "../../layouts/Layout.astro";
---

<Layout>
  <!-- Header -->
  <section
    class="relative bg-cover bg-center h-screen text-white flex flex-col justify-center items-center"
    style="background-image: url('/images/index/photo-accueil5.jpg');"
  >
    <div class="bg-black bg-opacity-50 absolute inset-0"></div>
    <div class="relative z-10 text-center px-4">
      <h1 class="text-6xl md:text-7xl font-bold drop-shadow-lg">
        Construisez votre formation sur-mesure
      </h1>
      <p class="text-xl md:text-2xl mt-4 max-w-3xl mx-auto drop-shadow-md">
        Chez Kaelia, notre force réside dans la construction de formations sur mesure,
adaptées à vos besoins spécifiques. Nos formations sont conçues en tenant compte de vos
enjeux et de vos objectifs, afin de proposer des solutions qui répondent pleinement à vos
attentes. Chaque programme est pensé et élaboré pour garantir une montée en compétences
ciblée et efficace. Avec Kaelia, bénéficiez d’une approche personnalisée et d’un
accompagnement dédié pour des résultats concrets et durables.
      </p>
    <br>
      <a
          href="#customizer"
          class="relative inline-block font-semibold py-3 px-8 border-2 border-white text-white rounded-full transition-all duration-500 group hover:bg-white hover:text-purple-800 animate-intro drop-shadow-lg transform hover:scale-105"
        >
          <span>Commencez maintenant</span>
          <span class="ml-2 group-hover:translate-x-1 transition-transform"
            >→</span
          >
        </a>
    </div>
  </section>

  <!-- Drag-and-Drop Section -->
  <section id="customizer" class="bg-white py-16">
    <div class="container mx-auto px-6">
      <h2 class="text-4xl font-bold text-gray-900 mb-8 text-center">
        Créez votre programme de formation personnalisé
      </h2>

      <div class="flex flex-col md:flex-row items-center gap-8">
        <!-- Modules disponibles -->
        <div class="w-full md:w-1/2 bg-gray-100 p-6 rounded-lg shadow-lg">
          <h3 class="text-2xl font-semibold text-purple-700 mb-4 text-center">
            Choix du ou des modules
          </h3>
          <ul
            id="modules-list"
            class="min-h-[300px] flex flex-col gap-4 p-4 bg-gray-100 border-2 border-dashed border-gray-300 rounded-lg"
          >
            <!-- Exemple de modules -->
            <li
              class="module-item relative transform transition-transform duration-300 cursor-grab p-4 bg-white border border-gray-300 rounded shadow hover:scale-105"
              draggable="true"
              data-id="module-1"
            >
              <h4 class="text-lg font-bold">Module 1: Juridique</h4>
              <p class="text-sm text-gray-600">
                Kaelia propose des offres de formation dédiées aux besoins juridiques des
dirigeants, entreprises et entrepreneurs. Pour vous protéger, protéger votre entreprise
et bonifier le développement de votre business.
              </p>
            </li>
            <li
              class="module-item relative transform transition-transform duration-300 cursor-grab p-4 bg-white border border-gray-300 rounded shadow hover:scale-105"
              draggable="true"
              data-id="module-2"
            >
              <h4 class="text-lg font-bold">
                Module 2: RSE
              </h4>
              <p class="text-sm text-gray-600">
                Kaelia propose des offres de formation dédiées aux besoins sociétales et
environnementales des dirigeants, entreprises et entrepreneurs
              </p>
            </li>
            <li
              class="module-item relative transform transition-transform duration-300 cursor-grab p-4 bg-white border border-gray-300 rounded shadow hover:scale-105"
              draggable="true"
              data-id="module-3"
            >
              <h4 class="text-lg font-bold">Module 3: RH</h4>
              <p class="text-sm text-gray-600">
                Kaelia propose des offres de formation en ressources humaines visant à
développer les compétences nécessaires pour gérer efficacement le capital humain
d’une organisation. Elles abordent des thématiques clés telles que le recrutement, la
gestion des talents, le dialogue social et la conformité réglementaire.
              </p>
            </li>
            <li
              class="module-item relative transform transition-transform duration-300 cursor-grab p-4 bg-white border border-gray-300 rounded shadow hover:scale-105"
              draggable="true"
              data-id="module-4"
            >
              <h4 class="text-lg font-bold">Module 4: Stratégie d’entreprise</h4>
              <p class="text-sm text-gray-600">
                Kaelia propose des offres de formation qui abordent des
thématiques telles que la gestion de projet, l’innovation ou la prise de décision
stratégique. Ces formations s’adressent aux dirigeants, managers et professionnels
souhaitant optimiser leur performance et celle de leur structure.
              </p>
            </li>
            <li
              class="module-item relative transform transition-transform duration-300 cursor-grab p-4 bg-white border border-gray-300 rounded shadow hover:scale-105"
              draggable="true"
              data-id="module-5"
            >
              <h4 class="text-lg font-bold">Module 5: Numérique</h4>
              <p class="text-sm text-gray-600">
                Kaelia propose des offres de formation qui englobent digital,
communication et informatique
              </p>
            </li>
          </ul>
        </div>

        <!-- Indicateur central -->
        <div
          class="flex flex-col items-center justify-center text-gray-700 gap-2"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-12 w-12 text-purple-500 animate-bounce"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M9 5l7 7-7 7"></path>
          </svg>
        </div>

        <!-- Modules sélectionnés -->
        <div class="w-full md:w-1/2 bg-gray-100 p-6 rounded-lg shadow-lg">
          <h3 class="text-2xl font-semibold text-purple-700 mb-4 text-center">
            Mon programme de formation personnalisé
          </h3>
          <ul
            id="selected-list"
            class="min-h-[200px] flex flex-col gap-4 p-4 bg-gray-100 border-2 border-dashed border-gray-300 rounded-lg"
          >
            <li class="text-gray-500 italic">
              Glissez le ou les modules de formation sélectionné(s)
            </li>
          </ul>
          <button
            id="submit-program"
            class="mt-6 bg-purple-700 hover:bg-purple-800 text-white py-3 px-6 rounded-full text-lg transition-transform transform hover:scale-105 w-full"
          >
          Valider mon programme de formation
          </button>
        </div>
      </div>
    </div>
  </section>

  <!-- Modal for User Information -->
  <div
    id="user-modal"
    class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 hidden z-50"
  >
    <div class="bg-white p-8 rounded-lg shadow-lg w-full max-w-md">
      <h2 class="text-2xl font-bold mb-4">Vos informations</h2>
      <form
        id="user-form"
        action="http://localhost:8000/mailer/submit_program.php"
        method="POST"
        class="space-y-4"
      >
        <div>
          <label for="user-name" class="block text-sm font-medium text-gray-700"
            >Nom *</label
          >
          <input
            type="text"
            id="user-name"
            name="name"
            required
            class="mt-1 block w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-purple-500 focus:border-purple-500"
          />
        </div>
        <div>
          <label
            for="user-email"
            class="block text-sm font-medium text-gray-700">Email *</label
          >
          <input
            type="email"
            id="user-email"
            name="email"
            required
            class="mt-1 block w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-purple-500 focus:border-purple-500"
          />
        </div>
        <div>
          <label
            for="user-phone"
            class="block text-sm font-medium text-gray-700">Téléphone</label
          >
          <input
            type="tel"
            id="user-phone"
            name="phone"
            class="mt-1 block w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-purple-500 focus:border-purple-500"
          />
        </div>
        <div>
          <label
            for="user-message"
            class="block text-sm font-medium text-gray-700">Message</label
          >
          <textarea
            id="user-message"
            name="message"
            rows="4"
            class="mt-1 block w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-purple-500 focus:border-purple-500"
          ></textarea>
        </div>

        <!-- Champ caché pour les modules sélectionnés -->
        <div id="hidden-modules"></div>

        <div class="flex justify-end">
          <button
            type="button"
            id="cancel-button"
            class="mr-4 bg-gray-300 hover:bg-gray-400 text-gray-700 py-2 px-4 rounded"
          >
            Annuler
          </button>
          <button
            type="submit"
            class="bg-purple-700 hover:bg-purple-800 text-white py-2 px-4 rounded"
          >
            Envoyer
          </button>
        </div>
      </form>
    </div>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      // Sélection des éléments
      const modulesList = document.getElementById(
        "modules-list"
      ) as HTMLUListElement;
      const selectedList = document.getElementById(
        "selected-list"
      ) as HTMLUListElement;
      const submitButton = document.getElementById(
        "submit-program"
      ) as HTMLButtonElement;

      const userModal = document.getElementById("user-modal") as HTMLElement;
      const userForm = document.getElementById("user-form") as HTMLFormElement;
      const cancelButton = document.getElementById(
        "cancel-button"
      ) as HTMLButtonElement;
      const hiddenModules = document.getElementById(
        "hidden-modules"
      ) as HTMLElement;

      if (
        !modulesList ||
        !selectedList ||
        !submitButton ||
        !userModal ||
        !userForm ||
        !cancelButton ||
        !hiddenModules
      ) {
        console.error(
          "Un ou plusieurs éléments requis ne sont pas trouvés dans le DOM."
        );
        return;
      }

      const moduleItems = modulesList.querySelectorAll(
        ".module-item"
      ) as NodeListOf<HTMLLIElement>;

      // Fonction permettant de déposer
      const allowDrop = (event: DragEvent) => {
        event.preventDefault(); // Permet le drop
      };

      // Fonction de gestion du drag
      const handleDragStart = (event: DragEvent) => {
        const target = event.target as HTMLElement;
        const moduleId = target.dataset.id; // Récupère l'ID du module
        if (moduleId && event.dataTransfer) {
          event.dataTransfer.setData("text/plain", moduleId); // Stocke l'ID dans l'objet dataTransfer
        }
      };

      // Fonction de gestion du drop
      const handleDrop = (event: DragEvent) => {
        event.preventDefault();

        // Récupère l'ID du module déplacé
        const moduleId = event.dataTransfer?.getData("text/plain");
        if (!moduleId) return;

        // Trouve l'élément d'origine dans les modules disponibles
        const draggedElement = modulesList.querySelector(
          `[data-id='${moduleId}']`
        ) as HTMLElement;
        const isAlreadyAdded = selectedList.querySelector(
          `[data-id='${moduleId}']`
        );

        if (!draggedElement || isAlreadyAdded) return;

        // Clone le module et l'ajoute à la liste cible
        const clonedElement = draggedElement.cloneNode(true) as HTMLElement;
        clonedElement.draggable = false; // Désactive le drag pour le clone
        clonedElement.classList.remove("cursor-grab"); // Retire le curseur de déplacement
        clonedElement.classList.add("cursor-default", "bg-blue-50"); // Change le curseur et la couleur de fond

        // Ajoute le bouton de suppression
        const removeButton = document.createElement("button");
        removeButton.title = "Retirer ce module";
        removeButton.innerHTML = "&times;";
        removeButton.className =
          "absolute top-2 right-2 bg-transparent border-none text-lg text-red-500 hover:text-red-700 cursor-pointer";
        clonedElement.appendChild(removeButton);

        // Gère le clic sur le bouton de suppression
        removeButton.addEventListener("click", () => {
          clonedElement.remove();
        });

        selectedList.appendChild(clonedElement); // Ajoute le clone dans la zone cible
      };

      // Lier les gestionnaires d'événements
      moduleItems.forEach((item) => {
        item.addEventListener("dragstart", handleDragStart); // Gérer le drag
      });

      selectedList.addEventListener("dragover", allowDrop); // Permet le drop
      selectedList.addEventListener("drop", handleDrop); // Gère le drop

      // Attacher l'événement au bouton de soumission
      submitButton.addEventListener("click", () => {
        const selectedModules = selectedList.querySelectorAll(".module-item");
        if (!selectedModules || selectedModules.length === 0) {
          alert("Veuillez sélectionner au moins un module avant de valider !");
          return;
        }
        // Afficher le modal
        userModal.classList.remove("hidden");
      });

      // Gérer la soumission du formulaire
      userForm.addEventListener("submit", () => {
        // Avant de soumettre, ajouter les modules sélectionnés comme champs cachés
        const selectedModules = Array.from(
          selectedList.querySelectorAll(".module-item")
        ) as HTMLElement[];

        // Vider les champs cachés précédents
        hiddenModules.innerHTML = "";

        if (selectedModules.length > 0) {
          selectedModules.forEach((module) => {
            const titleElement = module.querySelector("h4");
            const title = titleElement
              ? titleElement.textContent
              : "Module inconnu";

            const hiddenInput = document.createElement("input");
            hiddenInput.type = "hidden";
            hiddenInput.name = "program[]"; // Utiliser un tableau pour les modules
            hiddenInput.value = title || "Module inconnu";

            hiddenModules.appendChild(hiddenInput);
          });
        }

        // Le formulaire sera soumis normalement avec les champs cachés ajoutés
      });

      // Gérer le bouton d'annulation
      cancelButton.addEventListener("click", () => {
        userModal.classList.add("hidden");
      });
    });
  </script>
</Layout>
